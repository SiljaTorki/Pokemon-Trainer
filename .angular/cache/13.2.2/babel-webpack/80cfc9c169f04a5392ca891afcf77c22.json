{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/register.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\n\nfunction LoginPage_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.registerError);\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return {\n    \"is-valid\": a0,\n    \"is-invalid\": a1\n  };\n};\n\nexport let LoginPage = /*#__PURE__*/(() => {\n  class LoginPage {\n    constructor(router, registerService) {\n      this.router = router;\n      this.registerService = registerService;\n      this.registerError = \"\";\n    }\n\n    ngOnInit() {}\n\n    onLoginSubmit(form) {\n      //check trainer username\n      const {\n        username\n      } = form.value; //If username is empty, register errormessage to Dom-elemet\n\n      if (!username) {\n        this.registerError = \"You must have a Trainer name!\";\n      } else if (username.length < 2) {\n        //Else if username is too short, register errormessage to Dom-elemet\n        this.registerError = \"Requierd min length for Trainer name is 2!\";\n      } else {\n        //Register new Trainer\n        this.registerService.register(username, () => this.router.navigateByUrl(\"/pokemons\"));\n      }\n    }\n\n  }\n\n  LoginPage.ɵfac = function LoginPage_Factory(t) {\n    return new (t || LoginPage)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.RegisterService));\n  };\n\n  LoginPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginPage,\n    selectors: [[\"app-login\"]],\n    decls: 13,\n    vars: 5,\n    consts: [[3, \"ngSubmit\"], [\"loginForm\", \"ngForm\"], [\"for\", \"username\"], [\"type\", \"text\", \"ngModel\", \"\", \"name\", \"username\", \"minlength\", \"2\", \"required\", \"\", \"placeholder\", \"E.g. CoolTrainer92\", 1, \"form-control\", 3, \"ngClass\"], [\"username\", \"ngModel\"], [\"class\", \"alert-danger\", 4, \"ngIf\"], [\"type\", \"submit\"], [1, \"alert-danger\"]],\n    template: function LoginPage_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r3 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"body\");\n        i0.ɵɵelementStart(1, \"h1\");\n        i0.ɵɵtext(2, \"Login Trainer\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 0, 1);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginPage_Template_form_ngSubmit_3_listener() {\n          i0.ɵɵrestoreView(_r3);\n\n          const _r0 = i0.ɵɵreference(4);\n\n          return ctx.onLoginSubmit(_r0);\n        });\n        i0.ɵɵelementStart(5, \"fieldset\");\n        i0.ɵɵelementStart(6, \"label\", 2);\n        i0.ɵɵtext(7, \"Enter Trainer name: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 3, 4);\n        i0.ɵɵtemplate(10, LoginPage_div_10_Template, 3, 1, \"div\", 5);\n        i0.ɵɵelementStart(11, \"button\", 6);\n        i0.ɵɵtext(12, \"Continue\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(9);\n\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(2, _c0, _r1.valid, _r1.invalid && (_r1.dirty || _r1.touched)));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.registerError);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i3.MinLengthValidator, i3.RequiredValidator, i4.NgClass, i4.NgIf],\n    styles: [\"h1[_ngcontent-%COMP%]{text-align:center;font-family:Courier New,Courier,monospace;background-color:red;border-radius:30px;padding:14px 16px;font-weight:700}button[_ngcontent-%COMP%]{text-align:center;cursor:pointer;padding:5px;margin:10px;font-family:Courier New,Courier,monospace;border-radius:50px;font-size:medium}label[_ngcontent-%COMP%]{font-size:large}fieldset[_ngcontent-%COMP%]{background-color:#fff;text-align:center;font-family:Courier New,Courier,monospace;border-radius:30px;padding:10px}body[_ngcontent-%COMP%]{background-color:#f7e8e8;padding:18%}.form-control[_ngcontent-%COMP%]{font-size:large;border-radius:10px;text-align:center}.alert-danger[_ngcontent-%COMP%]{font-size:large;font-weight:700;color:red}\"]\n  });\n  return LoginPage;\n})();","map":null,"metadata":{},"sourceType":"module"}