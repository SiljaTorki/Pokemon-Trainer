{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/services/register.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../pokemon-list-item/pokemon-list-item.component\";\n\nfunction PokemonListComponent_app_pokemon_list_item_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"app-pokemon-list-item\", 3);\n    i0.ɵɵlistener(\"click\", function PokemonListComponent_app_pokemon_list_item_2_Template_app_pokemon_list_item_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const pokemon_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.addPokemon(pokemon_r1);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const pokemon_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"pokemon\", pokemon_r1);\n  }\n}\n\nexport let PokemonListComponent = /*#__PURE__*/(() => {\n  class PokemonListComponent {\n    //DI - Dependency Injection\n    constructor(http, registerService) {\n      this.http = http;\n      this.registerService = registerService; //Type of metadata for an `Input` property.\n\n      this.pokemons = []; //Type of the Output metadata.\n\n      this.addPokemonToTrainer = new EventEmitter(); //Empty responseObject\n\n      this.responseObject = null; //Empty pokemon object\n\n      this.poke = {\n        pokemonName: '',\n        id: 0,\n        pokemonImg: ''\n      };\n    } //Method that norifies the parent pokemon page with information of selected pokemon trainer wants to add\n\n\n    addPokemon(pokemon) {\n      this.addPokemonToTrainer.emit(pokemon); // Notify the parent -> pokemon.page\n    }\n\n    ngOnInit() {\n      this.http.get('https://pokeapi.co/api/v2/pokemon?limit=151').subscribe({\n        next: response => {\n          this.responseObject = response;\n\n          for (let index in response.results) {\n            //Makes a Pokemon object for evry pokemon in the API (list limited to 151)\n            this.poke = this.registerService.getPokemon(response.results[index]); //Push Pokemon to an output array that sends metadata to DOM element \n\n            this.pokemons.push(this.poke);\n          }\n        },\n        error: error => {\n          console.error(error);\n        }\n      });\n    }\n\n  }\n\n  PokemonListComponent.ɵfac = function PokemonListComponent_Factory(t) {\n    return new (t || PokemonListComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.RegisterService));\n  };\n\n  PokemonListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PokemonListComponent,\n    selectors: [[\"app-pokemon-list\"]],\n    inputs: {\n      pokemons: \"pokemons\"\n    },\n    outputs: {\n      addPokemonToTrainer: \"addPokemonToTrainer\"\n    },\n    decls: 3,\n    vars: 1,\n    consts: [[\"id\", \"allPokemons\"], [1, \"row\"], [3, \"pokemon\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"pokemon\", \"click\"]],\n    template: function PokemonListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵtemplate(2, PokemonListComponent_app_pokemon_list_item_2_Template, 1, 1, \"app-pokemon-list-item\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.pokemons);\n      }\n    },\n    directives: [i3.NgForOf, i4.PokemonListItemComponent],\n    styles: [\"div[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;align-items:center;grid-template-columns:auto auto auto}#allPokemons[_ngcontent-%COMP%]{background-color:#f7e8e8;text-align:center;font-family:Courier New,Courier,monospace}\"]\n  });\n  return PokemonListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}